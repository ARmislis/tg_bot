from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from utils.api import request, unwrap
from utils.redis_client import get_customer_id
from utils.keyboards import login_inline_kb

router = Router()

# —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏ –∏–∑ –∫–Ω–æ–ø–∫–∏, –∏ –∏–∑ /me
async def profile_cmd(message: Message):
    customer_id = await get_customer_id(message.chat.id)
    if not customer_id:
        await message.answer("‚ÑπÔ∏è –°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ.", reply_markup=login_inline_kb())
        return

    status, payload = await request(message.chat.id, "GET", f"/customers/{customer_id}/")
    if status == 403:
        await message.answer("üîê –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –í–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=login_inline_kb())
        return

    if status == 200:
        obj = unwrap(payload)
        name = obj.get("name", "‚Äî")
        phone = obj.get("phone", "‚Äî")
        lang = obj.get("language", "‚Äî")
        await message.answer(f"üë§ <b>{name}</b>\nüìû {phone}\nüåê {lang}")
    else:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è (status={status}):\n<code>{payload}</code>")


# –∫–æ–º–∞–Ω–¥–∞ /me –ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é
@router.message(Command("me"))
async def profile_command_entry(message: Message):
    await profile_cmd(message)
