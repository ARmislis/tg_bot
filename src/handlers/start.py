from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from utils.keyboards import (
    nav_inline_kb,
    main_menu_reply_auth,
    main_menu_reply_unauth,
)
from utils.redis_client import get_customer_id

# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—Ç—ã FSM –ª–æ–≥–∏–Ω–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
from handlers.auth import login_start, register_start
# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –∫–∞—Ä—Ç –∏ –ø—Ä–æ—Ñ–∏–ª—è
from handlers.mycards import mycards_cmd
from handlers.profile import profile_cmd

router = Router()

WELCOME = (
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ForFriends! üëã\n"
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."
)

# ===== /start =====

@router.message(CommandStart())
async def start_cmd(message: Message):
    customer_id = await get_customer_id(message.chat.id)
    if customer_id:
        await message.answer(WELCOME, reply_markup=main_menu_reply_auth())
    else:
        await message.answer(WELCOME, reply_markup=main_menu_reply_unauth())


# ===== Reply keyboard actions =====

@router.message(F.text == "üé¥ –ú–æ–∏ –∫–∞—Ä—Ç—ã")
async def reply_cards(message: Message):
    # –≤–º–µ—Å—Ç–æ "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å /mycards" –≤—ã–∑—ã–≤–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä
    await mycards_cmd(message)

@router.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def reply_profile(message: Message):
    # –≤–º–µ—Å—Ç–æ "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å /me" –≤—ã–∑—ã–≤–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä
    await profile_cmd(message)

@router.message(F.text == "üîé –ù–∞–π—Ç–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–µ")
async def reply_find(message: Message):
    await message.answer(
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫:",
        reply_markup=nav_inline_kb()
    )

# ===== –í—Ö–æ–¥ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è =====

@router.message(F.text == "üîê –í–æ–π—Ç–∏")
async def reply_login(message: Message, state: FSMContext):
    await login_start(message, state)

@router.message(F.text == "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
async def reply_register(message: Message, state: FSMContext):
    await register_start(message, state)
